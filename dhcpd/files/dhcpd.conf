# dhcpd.conf
#
# SaltStack-generated configuration file for ISC dhcpd
#

# option definitions common to all supported networks...
{% if salt['pillar.get']('dhcpd:domain_name', False) -%}
option domain-name "{{ salt['pillar.get']('dhcpd:domain_name') }}";
{% endif -%}
{% if salt['pillar.get']('dhcpd:domain_name_servers', False) -%}
option domain-name-servers 
  {%- for dns_server in salt['pillar.get']('dhcpd:domain_name_servers') %} {{ dns_server }}
    {%- if not loop.last %}, {% else %};{% endif %}
  {%- endfor %}
{% endif -%}

{% if salt['pillar.get']('dhcpd:default_lease_time', False) -%}
default-lease-time {{ salt['pillar.get']('dhcpd:default_lease_time') }};
{% endif -%}
{% if salt['pillar.get']('dhcpd:max_lease_time', False) -%}
max-lease-time {{ salt['pillar.get']('dhcpd:max_lease_time') }};
{% endif -%}

# Use this to enble / disable dynamic dns updates globally.
{%- if salt['pillar.get']('dhcpd:ddns_update_style', False) %}
ddns-update-style {{ salt['pillar.get']('dhcpd:ddns_update_style') }};
{%- else %}
#ddns-update-style none;
{%- endif %}

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
{%- if salt['pillar.get']('dhcpd:authoritative', False) %}
authoritative;
{%- else %}
#authoritative;
{%- endif %}

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
{%- if salt['pillar.get']('dhcpd:log_facility', False) %}
log-facility {{ salt['pillar.get']('dhcpd:log_facility') }};
{%- endif %}
{% for subnet, config in salt['pillar.get']('dhcpd:subnets', {}).items() %}
  {%- if config.has_key('comment') %}
    {%- for line in config['comment'].splitlines() %}
# {{ line }}
    {%- endfor %}
  {%- endif %}
subnet {{ subnet }} netmask {{ config.netmask }} {
  {%- if config.has_key('range') %}
    {%- if config.has_key('dynamic_bootp') and config.dynamic_bootp %}
  range dynamic-bootp {{ config.range[0] }} {{ config.range[1] }};
    {%- else %}
  range {{ config.range[0] }} {{ config.range[1] }};
    {%- endif %}
  {%- endif %}
  {%- if config.has_key('broadcast_address') %}
  broadcast-address {{ config['broadcast_address'] }};
  {%- endif %}
  {%- if config.has_key('routers') and config.routers is string %}
  option routers {{ config.routers }};
  {%- elif config.has_key('routers') and config.routers is sequence %}
  option routers
    {%- for router in config.routers %} {{ router }}
      {%- if not loop.last %}, {% else %};{% endif %}
    {%- endfor %} 
  {%- endif %}
}
{%- endfor %}

{% for host, config in salt['pillar.get']('dhcpd:hosts', {}).items() %}
  {%- if config.has_key('comment') %}
    {%- for line in config.comment.splitlines() %}
# {{ line }}
    {%- endfor %}
  {%- endif %}
host {{ host }} {
  {%- if config.has_key('hardware') %}
  hardware {{ config.hardware }};
  {%- endif %}
  {%- if config.has_key('fixed_address') %}
  fixed-address "{{ config.fixed_address }}";
  {%- endif %}
  {%- if config.has_key('filename') %}
  filename "{{ config.filename }}";
  {%- endif %}
  {%- if config.has_key('server_name') %}
  server-name "{{ config.server_name }}";
  {%- endif %}
}
{% endfor %}
{%- for class, config in salt['pillar.get']('dhcpd:classes', {}).items() %}
  {%- if config.has_key('comment') %}
    {%- for line in config.comment.splitlines() %}
# {{ line }}
    {%- endfor %}
  {%- endif %}
class "{{ class }}" {
  {%- if config.has_key('match') %}
  match {{ config.match }};
  {%- endif %}
}
{% endfor %}
{%- for shared_network, config in salt['pillar.get']('dhcpd:shared_networks', {}).items() %}
  {%- if config.has_key('comment') %}
    {%- for line in config.comment.splitlines() %}
# {{ line }}
    {%- endfor %}
  {%- endif %}
shared-network {{ shared_network }} {
  subnet 10.17.224.0 netmask 255.255.255.0 {
    option routers rtr-224.example.org;
  }
  subnet 10.0.29.0 netmask 255.255.255.0 {
    option routers rtr-29.example.org;
  }
  pool {
    allow members of "foo";
    range 10.17.224.10 10.17.224.250;
  }
  pool {
    deny members of "foo";
    range 10.0.29.10 10.0.29.230;
  }
}
{%- endfor %}
